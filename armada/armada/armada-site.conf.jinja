upstream stationspinner {
    server unix:/srv/www/stationspinner/run/stationspinner.sock;
}

{% if armada.ssl %}
server {
    listen         80;
    server_name    {{ armada.server_name }};
    return         301 https://$server_name$request_uri;
}
{% endif %}

server {

    {% if armada.ssl %}
    listen 443 ssl;
    ssl_certificate  {{ armada.ssl_certificate }};
    ssl_certificate_key {{ armada.ssl_certificate_key }};
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    # modern configuration. tweak to your needs.
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate {{ armada.ssl_trusted_certificate }};
    {% endif %}

    server_name {{ armada.server_name }};
    access_log /var/log/nginx/{{ armada.server_name }}_access.log;
    error_log /var/log/nginx/{{ armada.server_name }}_error.log;

	root /srv/www/armada/build;

    location /static {
        alias /srv/www/stationspinner/web/static;
    }

    location /api {
        include     uwsgi_params;
        uwsgi_pass  stationspinner;
    }
}

